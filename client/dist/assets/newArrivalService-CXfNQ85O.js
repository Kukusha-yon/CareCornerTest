import{d as o}from"./index-DBuhCPqP.js";class a extends Error{constructor(e,s="UNKNOWN_ERROR",i={}){super(e),this.name="NewArrivalServiceError",this.code=s,this.details=i}}const n="/new-arrivals",c=async()=>{try{return(await o.get(n)).data}catch(r){throw r.response?new a(r.response.data.message||"Failed to fetch new arrivals","FETCH_ERROR",{status:r.response.status,data:r.response.data}):new a("Network error while fetching new arrivals","NETWORK_ERROR",{originalError:r.message})}},l=async r=>{try{return(await o.get(`${n}/${r}`)).data}catch(e){throw e.response?new a(e.response.data.message||"Failed to fetch new arrival","FETCH_ERROR",{status:e.response.status,data:e.response.data}):new a("Network error while fetching new arrival","NETWORK_ERROR",{originalError:e.message})}};async function R(){var r,e,s,i,w,d;try{return(await o.get(`${n}/admin`)).data}catch(t){throw console.error("Error fetching admin new arrivals:",t),((r=t.response)==null?void 0:r.status)===401?new a("Authentication error: Not authorized, please log in again.","AUTH_ERROR",{status:(e=t.response)==null?void 0:e.status}):new a(`Failed to fetch admin new arrivals: ${((i=(s=t.response)==null?void 0:s.data)==null?void 0:i.message)||t.message}`,"FETCH_ERROR",{status:(w=t.response)==null?void 0:w.status,details:(d=t.response)==null?void 0:d.data})}}const h=async r=>{try{return(await o.post(n,r,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(e){throw e.response?new a(e.response.data.message||"Failed to create new arrival","CREATE_ERROR",{status:e.response.status,data:e.response.data}):new a("Network error while creating new arrival","NETWORK_ERROR",{originalError:e.message})}},E=async(r,e)=>{try{return(await o.put(`${n}/${r}`,e,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(s){throw s.response?new a(s.response.data.message||"Failed to update new arrival","UPDATE_ERROR",{status:s.response.status,data:s.response.data}):new a("Network error while updating new arrival","NETWORK_ERROR",{originalError:s.message})}},u=async r=>{try{return(await o.delete(`${n}/${r}`)).data}catch(e){throw e.response?new a(e.response.data.message||"Failed to delete new arrival","DELETE_ERROR",{status:e.response.status,data:e.response.data}):new a("Network error while deleting new arrival","NETWORK_ERROR",{originalError:e.message})}};export{l as a,R as b,h as c,u as d,c as g,E as u};
