import{d as r}from"./index-DBuhCPqP.js";class t extends Error{constructor(e,a="UNKNOWN_ERROR",o={}){super(e),this.name="AdminServiceError",this.code=a,this.details=o}}const i=async()=>{try{return(await r.get("/admin/dashboard")).data}catch(s){throw s.response?new t(s.response.data.message||"Failed to fetch dashboard data","FETCH_ERROR",{status:s.response.status,data:s.response.data}):new t("Network error while fetching dashboard data","NETWORK_ERROR",{originalError:s.message})}},d=async(s="week")=>{try{return(await r.get(`/admin/stats?timeRange=${s}`)).data}catch(e){throw e.response?new t(e.response.data.message||"Failed to fetch stats","FETCH_ERROR",{status:e.response.status,data:e.response.data}):new t("Network error while fetching stats","NETWORK_ERROR",{originalError:e.message})}},c=async(s="week")=>{try{return(await r.get(`/admin/analytics?timeRange=${s}`)).data}catch(e){throw e.response?new t(e.response.data.message||"Failed to fetch analytics","FETCH_ERROR",{status:e.response.status,data:e.response.data}):new t("Network error while fetching analytics","NETWORK_ERROR",{originalError:e.message})}},R=async()=>{try{return(await r.get("/admin/users")).data}catch(s){throw s.response?new t(s.response.data.message||"Failed to fetch users","FETCH_ERROR",{status:s.response.status,data:s.response.data}):new t("Network error while fetching users","NETWORK_ERROR",{originalError:s.message})}},w=async(s,e)=>{try{return(await r.put(`/admin/users/${s}/status`,{status:e})).data}catch(a){throw a.response?new t(a.response.data.message||"Failed to update user status","UPDATE_ERROR",{status:a.response.status,data:a.response.data}):new t("Network error while updating user status","NETWORK_ERROR",{originalError:a.message})}},p=async s=>{try{return console.log("Deleting user with ID:",s),(await r.delete(`/admin/users/${s}`)).data}catch(e){throw e.response?new t(e.response.data.message||"Failed to delete user","DELETE_ERROR",{status:e.response.status,data:e.response.data}):new t("Network error while deleting user","NETWORK_ERROR",{originalError:e.message})}},h=async(s="week")=>{try{return(await r.get(`/admin/orders/stats?timeRange=${s}`)).data}catch(e){throw e.response?new t(e.response.data.message||"Failed to fetch order stats","FETCH_ERROR",{status:e.response.status,data:e.response.data}):new t("Network error while fetching order stats","NETWORK_ERROR",{originalError:e.message})}},g=async(s="week")=>{try{return(await r.get(`/admin/products/stats?timeRange=${s}`)).data}catch(e){throw e.response?new t(e.response.data.message||"Failed to fetch product stats","FETCH_ERROR",{status:e.response.status,data:e.response.data}):new t("Network error while fetching product stats","NETWORK_ERROR",{originalError:e.message})}},u=async(s="week")=>{try{return(await r.get(`/admin/customers/stats?timeRange=${s}`)).data}catch(e){throw e.response?new t(e.response.data.message||"Failed to fetch customer stats","FETCH_ERROR",{status:e.response.status,data:e.response.data}):new t("Network error while fetching customer stats","NETWORK_ERROR",{originalError:e.message})}},E=async s=>{try{return(await r.post("/admin/users",s)).data}catch(e){throw e.response?new t(e.response.data.message||"Failed to create user","CREATE_ERROR",{status:e.response.status,data:e.response.data}):new t("Network error while creating user","NETWORK_ERROR",{originalError:e.message})}};export{d as a,h as b,g as c,u as d,p as e,E as f,i as g,R as h,c as i,w as u};
