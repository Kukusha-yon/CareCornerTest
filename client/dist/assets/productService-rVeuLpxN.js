import{d as o}from"./index-DBuhCPqP.js";const c={CISCO_SWITCH:"CISCO Switch",SERVER:"Server",MONITORS:"Monitors",LOGITECH_WORLD:"Logitech World",BAGS:"Bags",CHARGER:"Charger"};class s extends Error{constructor(e,t="UNKNOWN_ERROR",a={}){super(e),this.name="ProductServiceError",this.code=t,this.details=a}}const d=async(r={})=>{try{return(await o.get("/products",{params:r})).data}catch(e){throw e.response?new s(e.response.data.message||"Failed to fetch products","FETCH_ERROR",{status:e.response.status,data:e.response.data}):new s("Network error while fetching products","NETWORK_ERROR",{originalError:e.message})}},p=async r=>{try{return(await o.get(`/products/${r}`)).data}catch(e){throw e.response?new s(e.response.data.message||"Failed to fetch product","FETCH_ERROR",{status:e.response.status,data:e.response.data}):new s("Network error while fetching product","NETWORK_ERROR",{originalError:e.message})}},u=async r=>{try{return(await o.post("/products",r)).data}catch(e){throw e.response?new s(e.response.data.message||"Failed to create product","CREATE_ERROR",{status:e.response.status,data:e.response.data}):new s("Network error while creating product","NETWORK_ERROR",{originalError:e.message})}},R=async(r,e)=>{try{return(await o.put(`/products/${r}`,e)).data}catch(t){throw t.response?new s(t.response.data.message||"Failed to update product","UPDATE_ERROR",{status:t.response.status,data:t.response.data}):new s("Network error while updating product","NETWORK_ERROR",{originalError:t.message})}},i=async r=>{try{return(await o.delete(`/products/${r}`)).data}catch(e){throw e.response?new s(e.response.data.message||"Failed to delete product","DELETE_ERROR",{status:e.response.status,data:e.response.data}):new s("Network error while deleting product","NETWORK_ERROR",{originalError:e.message})}},w=async()=>{try{return(await o.get("/products/featured")).data}catch(r){throw r.response?new s(r.response.data.message||"Failed to fetch featured products","FETCH_ERROR",{status:r.response.status,data:r.response.data}):new s("Network error while fetching featured products","NETWORK_ERROR",{originalError:r.message})}},E=async r=>{try{return(await o.get("/products/search",{params:{q:r}})).data}catch(e){throw e.response?new s(e.response.data.message||"Failed to search products","SEARCH_ERROR",{status:e.response.status,data:e.response.data}):new s("Network error while searching products","NETWORK_ERROR",{originalError:e.message})}},h=async r=>(await o.get(`/products/category/${encodeURIComponent(r)}`)).data;export{c as P,d as a,w as b,h as c,i as d,u as e,p as g,E as s,R as u};
